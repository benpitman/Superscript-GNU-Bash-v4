#!/bin/bash

bash_version=${BASH_VERSION:0:1}
if (( $bash_version < 4 )); then
    printf "Incorrect bash version. Please upgrade to 4 or above."
    exit 1
fi

if [[ "$USER" != "root" ]]; then
    printf "Your password is required to install this game.
            \rLeave blank to cancel install.\n"
    while true; do
        IFS= read -sp '> ' PASS
        [ -z "$PASS" ] && exit 0
        if $( echo "$PASS" | sudo -Svp '' ); then
            break
        fi
    done
    do_sudo=sudo
else
    do_sudo=
fi

# Install gnome-terminal
if ! hash gnome-terminal 2>/dev/null; then
    printf  "Superscript is most compatible in terminals that can display
            \rdouble-width unicode characters, such as gnome-terminal.
            \rWithout it, the option '-g' cannot be used (GUI ONLY).
            \rAccessed with the '-g' option or an executable shortcut.
            \rWould you like to install it now?\n"
    while read -rp 'Y/N> ' install_gt; do
        if [[ "$install_gt" == [Yy] ]]; then
            if hash apt 2>/dev/null; then
                $do_sudo apt-get -yq install gnome-terminal || exit $?
            elif hash yum 2>/dev/null; then
                $do_sudo yum -yq install gnome-terminal || exit $?
            fi
            printf "gnome-terminal installed\n"
            break
        elif [[ "$install_gt" == [Nn] ]]; then
            break
        fi
    done
fi

game_dir='/usr/local/bin'
lib_dir='/usr/local/lib/superscript'
log_dir='/var/games/superscript'
hs_dir='/var/games/superscript/highscores'
current=$( dirname "$( readlink -f "$0" )" )

$do_sudo mkdir -p "$lib_dir" "$hs_dir"
$do_sudo chmod -R o+wr "$lib_dir" "$log_dir"

cp -r "$current"/allies "$lib_dir"
cp -r "$current"/texts "$lib_dir"
cp -r "$current"/icons "$lib_dir"
$do_sudo cp "$current"/gamefiles/* "$game_dir"
$do_sudo chmod a+x "$game_dir/superscript-game" "$game_dir/superscript"
printf 'txt,false,false' > "$log_dir/settings.txt"

printf "\nSuperscript installed.\n\n"

if hash gnome-terminal 2>/dev/null && [ -d "/usr/share/applications" ]; then
    printf  "Would you like an application shortcut?
            \rThis will only work with unity."
    while read -rp 'Y/N> ' shortcut; do
        [[ "$shortcut" == [Yy] ]] && break
        [[ "$shortcut" == [Nn] ]] && exit 0
    done
else
    exit 0
fi

selected=1
tput civis
while true; do
    if (( $selected )); then
        icon_name="square"
        SQUARE='\e[7mSQUARE\e[0m'
        CIRCLE='CIRCLE'
    else
        icon_name="circle"
        SQUARE='SQUARE'
        CIRCLE='\e[7mCIRCLE\e[0m'
    fi
    printf "\r\e[0m$SQUARE or $CIRCLE icon? (use arrow keys)"
    read -sn1 key1
    read -sn1 -t 0.0001 key2
    read -sn1 -t 0.0001 key3
    [[ "$key3" == [CD] ]] && (( selected ^= 1 ))
    [ -z "$key1" ] && break
done
tput cvvis

echo "[Desktop Entry]
Type=Application
Terminal=false
Name=Superscript
Icon=$lib_dir/icons/superscript-icon-$icon_name.png
Exec=superscript -g" | $do_sudo tee /usr/share/applications/superscript.desktop 1>/dev/null

if [[ "$USER" == "root" ]]; then
    printf  'root does not own a desktop, please enter a home user.
            \rLeave blank to cancel.\n'
    while read -rp "> " username; do
        [ -z "$username" ] && exit 0
        if id -u $username 2>/dev/null; then
            break
        else
            printf 'User does not exist\n'
        fi
    done
else
    username="$USER"
fi

shortcut_file="/home/$username/Desktop/Superscript.desktop"
$do_sudo cp -p /usr/share/applications/superscript.desktop "$shortcut_file"
$do_sudo chown "$username": "$shortcut_file"
$do_sudo chmod a+x "$shortcut_file"

printf '\nDone\n'
